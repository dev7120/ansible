Ansible Notes

ANSIBLE INTRODUCTION
--an open source IT automation yool devlopment to configure multiple system,and more advanced IT tasks such as continous deployments / zero downtime rolling updates.
--ansible is written in python. Ansible modules can be written in python , perl.
--main goal is simplicity and ease of use 


SETTING UP LAB
1) 5 VM installed on virtual box and configuring the network(IPv4 & hostname) using nmtui and connecting them to same network.  


ansible-c(ControlNode) -----------------> mhost1(managednode1)
192.168.99.1/24				  192.168.99.10/24	 
		       -----------------> mhost2(managednode2)
					  192.168.99.20/24
		       -----------------> mhost3(managednode3)
					  192.168.99.30/24
		       -----------------> mhost4(managednode4)
					  192.168.99.40/24
2) Configuring host file for name resolution on Contol node(ansible-c) usin vim editor in /etc/hosts
  192.168.99.10 	mhost1.example.com 	mhost1
  192.168.99.20 	mhost2.example.com 	mhost2
  192.168.99.30  	mhost3.example.com 	mhost3
  192.168.99.40  	mhost4.example.com 	mhost4

3) INSTALLING ANSIBLE
  yum install epel-release  -y  --- this will make epel repo available
  yum install ansible   -y --- installing ansible
  ansible--version --- displaying ansible version

4) SETTING UP SSH key relationship for root
    script---
 for host in 1 2 3 4
 do
 ssh-copy-id mhost$host
 done 

5)ANSIBLE CONFIG FILE AT DIFF. LOCATIONS
 touch /tmp/ansible.cfg

 in--> /home/ansible
 touch ansible.cfg
 touch .ansible.cfg
export ANSIBLE_CONFIG= /tmp/ansible.cfg
 unset ANSIBLE_CONFIG

that afterwards delete this using rm command

6)ENTERY OF MANAGED HOSTS AS GROUP
[mygroup1]
mhost[1:4]

ansible m* -m ping o


7)GROUP VARIABLE AND HOST VARIABLE
[mygroup1]
mhost1 ansible_user=ansible  (this will not ping as we have given ansible user to root and not a user named ansible)
mhost2

[mygroup2]
mhost[3:4]

[mygroup2:vars]
ansible_user=root   (this will work as we have given the user to root)

ansible mygroup1 -m ping
ansible mygroup2 -m ping



8)COMMANDS PERFORMED
ansible mhost1 -m command -a "cat/etc/hosts"
   52  ansible mhost1 -m command -a "cat /etc/hosts"
   53  ansible mhost1 -m command -a "cat /etc/fstab"
   54  shutdown now
   55  ansible mhost1 -m lineinfile -a "path=/etc/ssh/sshd_config regexp='^#Port' line='Port 22' state=present"
   56  ansible mhost1 -m command -a "cat /etc/ssh/sshd_config" 
   57  history 
   58  ansible mhost1 -m lineinfile -a "path=/etc/ssh/sshd_config insertafter='^Port' line='Port 555' state=present"
   59  ansible mhost1 -m command -a "cat /etc/ssh/sshd_config" 
   60  ansible mhost1 -m seport -a "port=555 setype=ssh_port_t statepresent"
   61  ansible mhost1 -m seport -a "ports=555 setype=ssh_port_t statepresent"
   62  ansible mhost1 -m seport -a "ports=555 setype=ssh_port_t state=present"
   63  ansible mhost1 -m seport -a "ports=555 proto=tcp setype=ssh_port_t state=present"
   64  ansible mhost1 -m firewalld -a "port=555/tcp state=enabled permanent=yes "
   65  ansible mhost1 -m command -a "systemctl restart sshd" 
   66  ansible mhost1 -m service -a "systemctl restart firewalld" 
   67  ansible mhost1 -m command -a "systemctl restart firewalld" 
   68  vim /etc/ssh/sshd_config 
   69  vim /etc/ansible/ansible.cfg 
   70  ansible -m ping 192.168.99.10
   71  ansible mhost1 -m ping 
   72  ssh 192.168.99.10
   73  ansible mhost1 -m lineinfile -a "path=/etc/ssh/sshd_config regexp='^Port 5' line='' state=present"
   74  ansible mhost1 -m lineinfile -a "path=/etc/ssh/sshd_config regexp='^Port 2' line='#Port 22' state=present"
   75  ansible mhost1 -m command -a "systemctl restart sshd"
   76  ansible mhost1 -m command -a "systemctl restart firewalld"
   77  ansible mhost1 -m ping
   78  vim /etc/ansible/ansible.cfg 

test
2nd testing